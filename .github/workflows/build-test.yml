name: Build, test

on: [push]

jobs:
  build-test-deploy:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: 'Free up disk space'
      run: |
        # Workaround for https://github.com/actions/virtual-environments/issues/709
        df -h
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'php.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf /usr/share/dotnet/
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Pull latest Docker images
      run: |
        ./src/docker/pull.sh

    - name: Set docker image tag
      run: |
        TAG=$(date '+%Y%m%d')-$(git rev-parse --short HEAD)
        echo "DOCKER_TAG=${TAG}" >> $GITHUB_ENV

    - uses: actions/download-artifact@v2
      continue-on-error: true
      with:
        name: docker-cache
        path: ./docker-cache

    - name: Build itk-wasm-base
      run: |
        if [[ -e ./docker-cache/itk-wasm-base.tar.xz ]]; then xz -d -k < ./docker-cache/itk-wasm-base.tar.xz | docker load ; fi
        ./src/docker/itk-wasm-base/build.sh
        mkdir -p ./docker-cache
        docker save itkwasm/base:latest | xz -e9 -T0 > ./docker-cache/itk-wasm-base.tar.xz

    - name: Build itk-wasi-base
      run: |
        if [[ -e ./docker-cache/itk-wasi-base.tar.xz ]]; then xz -d -k < ./docker-cache/itk-wasi-base.tar.xz | docker load ; fi
        ./src/docker/itk-wasm-base/build.sh --with-wasi
        mkdir -p ./docker-cache
        docker save itkwasm/wasi-base:latest | xz -e9 -T0 > ./docker-cache/itk-wasi-base.tar.xz

    - name: Build itk-wasm
      run: |
        if [[ -e ./docker-cache/itk-wasm.tar.xz ]]; then xz -d -k < ./docker-cache/itk-wasm.tar.xz | docker load ; fi
        ./src/docker/itk-wasm/build.sh
        mkdir -p ./docker-cache
        docker save itkwasm/emscripten:latest | xz -e9 -T0 > ./docker-cache/itk-wasm.tar.xz

    - name: Build itk-wasi
      run: |
        if [[ -e ./docker-cache/itk-wasi.tar.xz ]]; then xz -d -k < ./docker-cache/itk-wasi.tar.xz | docker load ; fi
        ./src/docker/itk-wasm/build.sh --with-wasi
        mkdir -p ./docker-cache
        docker save itkwasm/wasi:latest | xz -e9 -T0 > ./docker-cache/itk-wasi.tar.xz

    - name: Build itk-wasm-vtk
      run: |
        if [[ -e ./docker-cache/itk-wasm-vtk.tar.xz ]]; then xz -d -k < ./docker-cache/itk-wasm-vtk.tar.xz | docker load ; fi
        ./src/docker/itk-wasm-vtk/build.sh
        mkdir -p ./docker-cache
        docker save itkwasm/emscripten-vtk:latest | xz -e9 -T0 > ./docker-cache/itk-wasm-vtk.tar.xz

    - name: Cache docker results
      uses: actions/upload-artifact@v2
      with:
        name: docker-cache
        path: ./docker-cache
        retention-days: 7

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install packages
      run: |
        npm ci

    - name: Build
      run: |
        npm run build

    - name: Lint tests
      run: |
        npm run test:lint

    - name: Node tests
      run: |
        npm run test:node

    - name: Browser tests
      run: |
        # Allow writing test/output.html
        sudo chmod 777 test
        # To debug locally, run `./test/run.sh -d`
        ./test/run.sh

    - name: Test building a pipeline
      run: |
        cd test/pipelines/MedianFilterPipeline

        node ../../../src/itk-wasm-cli.js build -i itkwasm/emscripten:${{ env.DOCKER_TAG }} .
        rm -rf web-build

        node ../../../src/itk-wasm-cli.js build -i itkwasm/wasi:${{ env.DOCKER_TAG }} .
        rm -rf web-build

        cd -

    - name: Setup ipfs
      uses: ibnesayeed/setup-ipfs@master
      with:
        ipfs_version: ^0.8

    - name: Prepare testing data to pin on IPFS
      run: |
        mkdir itk-wasm-testing-data
        rsync -v -r --exclude=Objects --exclude='*-hash-stamp' ./build/ExternalData/ ./itk-wasm-testing-data/

    - name: Pin testing data on web3.storage
      uses: web3-storage/add-to-web3@v1
      id: web3
      with:
        web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
        path_to_add: 'itk-wasm-testing-data'

    - name: Pin testing data on Pinata
      if: github.ref == 'refs/heads/master'
      env:
        PINATA_JWT: ${{ secrets.PINATA_JWT }}
      run: |
        mkdir itk-wasm-testing-data
        rsync -v -r --exclude=Objects --exclude='*-hash-stamp' ./build/ExternalData/ ./itk-wasm-testing-data/
        echo "IPFS testing data: ${{ steps.web3.outputs.url }}"
        new_cid=${{ steps.web3.outputs.cid }}

        ipfs pin remote service add pinata https://api.pinata.cloud/psa "$PINATA_JWT"
        if test $(ipfs pin remote ls --service=pinata --name=itk-wasm-testing-data --cid=$new_cid | wc -l) -lt 1; then
          ipfs pin remote add --service=pinata --name=itk-wasm-testing-data $new_cid
        else
          echo "CID ${new_cid} already pinned on Pinata."
        fi

    - name: Build and publish docs
      if: github.ref == 'refs/heads/master'
      run: |
        git config --global user.name "GitHub Actions CI"
        git config --global user.email "robot@itk.org"
        npm run doc:publish

    - name: insighttoolkit DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_USERNAME }}
        password: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_PASSWORD }}

    - name: Push insighttoolkit images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push itkwasm/base:latest
        docker push itkwasm/base:${{ env.DOCKER_TAG }}
        docker push itkwasm/emscripten:latest
        docker push itkwasm/emscripten:${{ env.DOCKER_TAG }}

    - name: kitware DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.KITWARE_DOCKERHUB_USERNAME }}
        password: ${{ secrets.KITWARE_DOCKERHUB_PASSWORD }}

    - name: Push kitware images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push itkwasm/emscripten-vtk:latest
        docker push itkwasm/emscripten-vtk:${{ env.DOCKER_TAG }}
